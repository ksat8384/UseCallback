// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Component renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
      "padding": 20,
    }
  }
>
  <TextInput
    onChangeText={[Function]}
    placeholder="Enter a new user to add here..."
    style={
      Object {
        "backgroundColor": "white",
        "borderBottomColor": "#000000",
        "borderBottomWidth": 1,
        "marginBottom": 10,
      }
    }
    testID="input"
    value=""
  />
  <View
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="add-user"
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Add User
      </Text>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": "a",
          "name": "Batman",
        },
        Object {
          "id": "b",
          "name": "Superman",
        },
        Object {
          "id": "c",
          "name": "Ironman",
        },
        Object {
          "id": "i",
          "name": "Spiderman",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    testID="flat-list"
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#00ffff",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginVertical": 8,
              "padding": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 32,
              }
            }
          >
            Batman
          </Text>
          <View
            accessibilityRole="button"
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="remove"
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Remove
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#00ffff",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginVertical": 8,
              "padding": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 32,
              }
            }
          >
            Superman
          </Text>
          <View
            accessibilityRole="button"
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="remove"
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Remove
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#00ffff",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginVertical": 8,
              "padding": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 32,
              }
            }
          >
            Ironman
          </Text>
          <View
            accessibilityRole="button"
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="remove"
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Remove
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#00ffff",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginVertical": 8,
              "padding": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 32,
              }
            }
          >
            Spiderman
          </Text>
          <View
            accessibilityRole="button"
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="remove"
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Remove
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
